#include <WiFi.h>
#include <NTPClient.h>
#include <WiFiUdp.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// WiFi credentials
const char* ssid = "***";
const char* password = "***";

#define SCREEN_WIDTH 128 // OLED width,  in pixels
#define SCREEN_HEIGHT 32 // OLED height, in pixels
int espLed = 2;

// NTP Client
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 25200); // UTC+7

// Variabel waktu
unsigned long currentEpochTime = 0; // Waktu dalam detik sejak 1 Jan 1970
unsigned long lastUpdateMillis = 0; // Waktu saat terakhir kali di-update
unsigned long updateInterval = 1000; // Update setiap 1 detik

Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void setup() {
  Serial.begin(115200);
  pinMode(espLed,OUTPUT);

  if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("failed to start SSD1306 OLED"));
    while (1);
  }
  delay(2000);         // wait two seconds for initializing
  oled.clearDisplay(); // clear display

  oled.setTextSize(1);         // set text size
  oled.setTextColor(WHITE);    // set text color
  oled.setCursor(0, 10);       // set position to display
  oled.println("Welcome to your watch sir !!!"); // set text
  oled.display();              // display on OLED

  delay(3000);
  oled.clearDisplay();
  delay(1000);

  // Koneksi WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Menghubungkan ke WiFi...");
  }
  digitalWrite(espLed,1);

  // Sinkronisasi waktu dari NTP
  timeClient.begin();
  while (!timeClient.update()) {
    timeClient.forceUpdate();
  }
  currentEpochTime = timeClient.getEpochTime(); // Ambil waktu Epoch (detik sejak 1 Jan 1970)
  lastUpdateMillis = millis(); // Catat waktu sinkronisasi
  WiFi.disconnect(); // Matikan WiFi

  oled.setTextSize(1);         // set text size
  oled.setTextColor(WHITE);    // set text color
  oled.setCursor(0, 10);       // set position to display
  oled.println("Sinkronisasi selesai, WiFi dimatikan!"); // set text
  oled.display();              // display on OLED

  delay(2000);
  oled.clearDisplay();
}

void loop() {
  // Update waktu berdasarkan RTC internal
  if (millis() - lastUpdateMillis >= updateInterval) {
    currentEpochTime++;
    lastUpdateMillis = millis();
  }

  // Hitung jam, menit, dan detik
  unsigned long currentHour = (currentEpochTime % 86400L) / 3600 ; // Tambah offset UTC+7
  unsigned long currentMinute = (currentEpochTime % 3600) / 60;
  unsigned long currentSecond = currentEpochTime % 60;

  // Tampilkan waktu
  oled.setTextSize(1);         // set text size
  oled.setTextColor(WHITE);    // set text color
  oled.setCursor(0, 10);       // set position to display
  oled.println(String(currentHour) + ":" + String(currentMinute) + ":" + String(currentSecond)); // set text
  oled.display();              // display on OLED
  delay(10);

  oled.clearDisplay();
  delay(10);

  oled.setTextSize(1);         // set text size
  oled.setTextColor(WHITE);    // set text color
  oled.setCursor(0, 10);       // set position to display
  oled.println(String(currentHour) + ":" + String(currentMinute) + ":" + String(currentSecond)); // set text
  oled.display();              // display on OLED
  delay(10);
}

// Fungsi untuk mengatur ulang waktu secara manual (contoh via Serial)
void setManualTime(unsigned long epoch) {
  currentEpochTime = epoch; // Set ulang waktu
  lastUpdateMillis = millis(); // Reset waktu sinkronisasi
  Serial.println("Waktu diatur ulang secara manual!");
}
